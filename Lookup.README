In Ansible, the lookup plugin is used to retrieve data from various sources during playbook execution. There are two primary ways to use the lookup plugin: lookup('key') and lookup('file').

lookup('key'): This method is used to retrieve a single value from an Ansible dictionary or hash, based on a specific key.
Example:
Let's say you have a variable file named vars.yml with the following content:

my_data:
  key1: value1
  key2: value2
In your playbook, you can use the lookup('key') method to retrieve values based on keys:

- name: Example of using lookup with key
  debug:
    msg: "Value for key1 is {{ lookup('key', 'vars.yml', 'my_data.key1') }}"
This will output:

"msg": "Value for key1 is value1"
lookup('file'): This method is used to read data from a file and use it within a playbook.
Example:
Suppose you have a file named data.txt with the following content:

value1
value2
value3
You can read this file and use its contents in a playbook:

- name: Example of using lookup with file
  debug:
    msg: "Data from file: {{ lookup('file', 'data.txt') }}"
This will output:

"msg": "Data from file: ['value1', 'value2', 'value3']"
In summary, lookup('key') is used to retrieve a single value from a dictionary or hash, while lookup('file') is used to read data from a file. Both methods are handy for accessing and using data within Ansible playbooks.
